yo mate !! how are you??

< Makefile cat | wc -l | head -77 | tail -5 | ls -l >> out_file
< Makefile cat | head -7 | taili -5 >> out_file
< Makefile cat | wc -l > out_file
< Makefile ls -l | head -42 | echo hello world  > out_file

<Makefile << fin <src/main.c head -15 | echo hello world 15 >out_file >> files/out_file

< files/no_right << files/write_o < files/all_rights ls -l >files/read_o >>files/read_write >files/exec_o.c 

echo Hello world
echo "Hello world"

to do list :
	→ handle { } in parser
	→ check if all grammar is ok in lexer/parser/tokener 
	→ expansion of $ 
	→ $? print the exit status of the last command executed (ret)
	→ gérer les redirection avant l'exec
	→ gérer les open/close de fd avant l'exec

	→ gérer avec plusieurs redirection : ls -l > out_file > out_file2 
	redirection precedence

example / error :
	→ $ < ou << ou >> ou >
	bash: syntax error near unexpected token `newline'

	→ $ e'c'"h"o salut
	salut

	→ $ echo > in Hello
	Hello dans in

	→ $ echo 1 > out1 2 3 > /dev/stdout << 1 << 2 << 3 < in < in2
		→ ouvrir tous les heredocs
		→ /dev/stdout est ignore car il est ouvert en dernier
		→ out1 est bien cree mais il est vide
		→ in et in2 n'existent pas 
			→ erreur sur <in bash: in: No such file or directory
			→ arret du programme 
			→ echo ne s'execute pas

	